<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="EnvDTE" #>  
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	// USER INPUT	
	var modelFile = "DatabaseEnums.xml";			// model file


	// PARSING PART 
	 
	// read the model file
	EnvDTE.DTE dte = (EnvDTE.DTE) ((IServiceProvider) this.Host).GetService(typeof(EnvDTE.DTE));  		
	XElement rootElem = XElement.Load(System.IO.Path.Combine(dte.ActiveDocument.Path, modelFile));	

	var rootNamespace = "AutomationSystem.Base.Contract.Enums";

	// WRITING PART  
#>
namespace <#= rootNamespace #>
{
<#
	string enumName, enumDescription;
	foreach(var enumElem in rootElem.Elements("enum")) 
	{
		enumName = enumElem.Attribute("name").Value;
		enumDescription = enumElem.Attribute("description").Value;
#>

	/// <summary>
	/// <#= enumDescription #>
	/// </summary>
	public enum <#= enumName #> 
	{

	<#
		string itemId, itemName, itemDescription;
		foreach(var itemElem in enumElem.Elements("item"))
		{
			itemId = itemElem.Attribute("id").Value;				
			itemName = itemElem.Attribute("name").Value;	
			itemDescription = itemElem.Value;	
	#>
	/// <summary>
		/// <#= itemDescription #>
		/// </summary>
		<#= itemName #> = <#= itemId #>,
			
	<#
		}
	#>
}

<#
	}
#>
}
