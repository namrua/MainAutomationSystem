@model ClassReportsPageModel
@{
    ViewBag.Title = CommonResources.MenuCoordinatorClasses;
    ViewBag.ActiveMainMenuItemId = MenuItemId.CoordinatorClasses;

    var tabMenuItems = ViewServices.LayoutHelper.GetTabMenuItems(TabItemId.Class, TabItemId.ClassReports,
        new { id = Model.Class.ClassId });
    Html.RenderPartial("~/Views/Shared/_TabMenu.cshtml", tabMenuItems);

}

@using (var bg = Html.ButtonGroup(ButtonGroupType.TopCommandsGroup))
{
    @*@bg.Command("Generate financial forms", ButtonStyle.Primary, false, new { id = "financial-button" })*@
    @bg.Link("Report settings", ButtonStyle.Normal, Url.Action("ReportSettingEdit", new { id = Model.Class.ClassId }))
    @bg.Link(CommonResources.Back, ButtonStyle.Normal, Url.Action("Index"))
}

<div class="badge-title">
    <h4>@Model.Class.ClassTitle</h4>
    @Html.ClassCategoryBadge(Model.Class.ClassCategoryId)
    @Html.ClassStateBadge(Model.Class.ClassState)
</div>

<h5>Reports on demand</h5>
<table class="table table-hover table-sm">
    <thead>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Reports.OrderBy(x => x.ReportType))
    {
        <tr>
            <td>@item.Name</td>
            <td>@MainTextHelper.GetFileTypeText(item.FileTypeId)</td>
            <td>
                @using (var bg = Html.ButtonGroup(ButtonGroupType.ItemRightGroup))
                {
                    @bg.Link(CommonResources.Download, ButtonStyle.Primary, Url.Action("Download", "Report", new {id = Model.Class.ClassId, reportType = item.ReportType}))
                }
            </td>
        </tr>
    }        
    <tr>
        <td>Registration List</td>
        <td>Email</td>
        <td>
            @using (var bg = Html.ButtonGroup(ButtonGroupType.ItemRightGroup))
            {
                @bg.Link(CommonResources.Send, ButtonStyle.Primary, Url.Action("SelectRecipients", new {id = Model.Class.ClassId, type = ClassCommunicationType.RegistrationList}))
            }
        </td>
    </tr>

    @if (Model.IsSupervisedByMaster)
    {
        <tr>
            <td>Registration List for master coordinator</td>
            <td>Email</td>
            <td>
                @using (var bg = Html.ButtonGroup(ButtonGroupType.ItemRightGroup))
                {
                    @bg.Command(CommonResources.Send, ButtonStyle.Primary, false, new {id = "master-button"})
                }
            </td>
        </tr>
    }
    </tbody>
</table>



<h5>Stored reports</h5>

@*List of documents*@
@if (Model.Files.Count == 0)
{
    <p>
        <em>@CommonResources.NoRecords</em>
    </p>
}
else
{
    <table class="table table-hover table-sm">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(x => x.Files[0].DisplayedName)</th>
                <th>@Html.DisplayNameFor(x => x.Files[0].Assigned)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Files)
            {
                <tr>
                    <td>@Html.DisplayFor(x => item.DisplayedName)</td>
                    <td>@Html.DisplayFor(x => item.Assigned)</td>
                    <td>
                        @using (var bg = Html.ButtonGroup(ButtonGroupType.ItemRightGroup))
                        {
                            @bg.Link(CommonResources.Download, ButtonStyle.Primary, Url.Action("Download", "File", new { id = item.FileId }))
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}



@*List of Generating requests*@
@if (Model.GeneratingRequests.Count != 0)
{
    <hr />
    <h5>Document generating</h5>
    <table class="table table-hover table-sm">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(x => x.GeneratingRequests[0].AsyncRequestType)</th>
                <th>@Html.DisplayNameFor(x => x.GeneratingRequests[0].ProcessingState)</th>
                <th>@Html.DisplayNameFor(x => x.GeneratingRequests[0].Started)</th>
                <th>@Html.DisplayNameFor(x => x.GeneratingRequests[0].Finished)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.GeneratingRequests)
            {
                <tr class="@CssClassHelper.New().AddIf(item.ProcessingStateId != ProcessingStateEnum.Finished, "table-warning").Render()">
                    <td>@Html.DisplayFor(x => item.AsyncRequestType)</td>
                    <td>@Html.DisplayFor(x => item.ProcessingState)</td>
                    <td>@Html.DisplayFor(x => item.Started)</td>
                    <td>@Html.DisplayFor(x => item.Finished)</td>
                </tr>
            }
        </tbody>
    </table>
}


@section scripts
{

    <script type="text/javascript">

        var runPageScript = function () {

            // DELETE FUNCTIONALITY

            // registration helper
            var requestHelper = new CorabeuControl.RequestHelper();
            requestHelper.addAction("financial", "@Url.Action("GenerateFinancialForms", new { id = Model.Class.ClassId })");
            requestHelper.addAction("master", "@Url.Action("SendRegistrationListToMasterCoordinator", new { id = Model.Class.ClassId })");

            //// connect financial-button
            //$("#financial-button").click(function () {
            //    requestHelper.executePost("financial");
            //});

            // connect master-button
            $("#master-button").click(function () {
                var confirmed = confirm("@Html.Raw($"Are you sure to send Registration list to Master coordinator ({Model.MasterCoordinatorEmail})?")");
                if (!confirmed) return;
                requestHelper.executePost("master");
            });

        }

    </script>

}
