@model ClassBusinessForEdit
@{
    ViewBag.Title = CommonResources.MenuCoordinatorClasses;
    ViewBag.ActiveMainMenuItemId = MenuItemId.CoordinatorClasses;
}

<form id="financeForm" method="post" action="@Url.Action("BusinessEdit")">

    @Html.EditorFor(x => x.Form.ClassId)
    
    <h5>CRF Parameters</h5>

    <div class="row">

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Form.ApprovedBudget)
            @Html.EditorFor(x => x.Form.ApprovedBudget, new { RightAddonText = Model.CurrencyCode })
        </div>

    </div>
    
    @if (Model.AreFinancialFormsAllowed)
    {

        <h5>Financial From Parameters</h5>

        <div class="row">
                        
            <div class="form-group col-md-6">
                @Html.LabelFor(x => x.Form.PrintReimbursement)
                @Html.EditorFor(x => x.Form.PrintReimbursement, new { RightAddonText = Model.CurrencyCode })
            </div>
            
            <div class="form-group col-md-6">
                @Html.LabelFor(x => x.Form.AssociatedLectureId)
                @Html.EditorFor(x => x.Form.AssociatedLectureId, new { Items = Model.Lectures })
            </div>

        </div>

        

        @*Form for custom expenses *@
        if (Model.Form.CustomExpenses.Count != 0)
        {
            <h5>Custom Expenses</h5>

            <table class="table table-hover table-sm">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(x => x.Form.CustomExpenses[0].Order)</th>
                        <th class="table-form-width-4">@Html.DisplayNameFor(x => x.Form.CustomExpenses[0].Text)</th>
                        <th class="table-form-width-3">@Html.DisplayNameFor(x => x.Form.CustomExpenses[0].Value)</th>
                    </tr>
                </thead>
                <tbody>
                @for (var i = 0; i < Model.Form.CustomExpenses.Count; i++)
                {
                    <tr>
                        <td>
                            <strong>@Html.DisplayFor(x => Model.Form.CustomExpenses[i].Order).</strong>
                            @Html.EditorFor(x => Model.Form.CustomExpenses[i].Order)
                        </td>
                        <td class="form-group">
                            @Html.EditorFor(x => Model.Form.CustomExpenses[i].Text)
                        </td>
                        <td class="form-group">
                            @Html.EditorFor(x => Model.Form.CustomExpenses[i].Value, new { RightAddonText = Model.CurrencyCode })
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }

    }

    @using (var bg = Html.ButtonGroup(ButtonGroupType.PagePartGroup))
    {
        @bg.Submit(CommonResources.Save)
        @bg.Link(CommonResources.Back, ButtonStyle.Normal, Url.Action("Business", new { id = Model.Form.ClassId }))
    }

</form>

@section scripts
{

    <script type="text/javascript">

        var runPageScript = function() {

            // INITIALIZATION AND VALIDATION

            var financeForm = new CorabeuControl.Form("financeForm");

            financeForm.validateControl($("#approvedBudget"), "@Html.DisplayNameForJava(x => x.Form.ApprovedBudget)", { required: false, number: true, min: 0, max: 1000000 });

            @if (Model.AreFinancialFormsAllowed)
            {
                <text>

                    var associatedLectureId = new CorabeuControl.DropDownList("associatedLectureId", "AssociatedLectureId");

                    financeForm.validateControl($("#printReimbursement"), "@Html.DisplayNameForJava(x => x.Form.PrintReimbursement)", { required: false, number: true, min: 0, max: 1000000 });
            
                    @for (var i = 0; i < Model.Form.CustomExpenses.Count; i++)
                    {
                        var selectorPrefix = $"#customExpenses-{i}-";
                        var fieldOrder = $"{Model.Form.CustomExpenses[i].Order}.";
                        <text>
                    financeForm.validateControl($('@($"{selectorPrefix}text")'), '@($"{Html.DisplayNameForJava(x => x.Form.CustomExpenses[0].Text)} {fieldOrder}")', { required: true, maxlength: 128 });
                    financeForm.validateControl($('@($"{selectorPrefix}value")'), '@($"{Html.DisplayNameForJava(x => x.Form.CustomExpenses[0].Value)} {fieldOrder}")', { required: false, number: true, min: 0, max: 1000000 });
                        </text>
                    }

                </text>
            }

            @if (ViewBag.TriggerValidation != null)
            {
                @:financeForm.valid();
            }

        }

    </script>

}