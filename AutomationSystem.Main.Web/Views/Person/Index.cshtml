@model PersonListPageModel
@{
    ViewBag.Title = CommonResources.MenuCommonPersons;
    ViewBag.ActiveMainMenuItemId = MenuItemId.CommonPersons;
}

@using (var bg = Html.ButtonGroup(ButtonGroupType.TopCommandsGroup))
{
    @bg.DropdownLink("Add new", ButtonStyle.Primary, "new-class-button", false,
        Model.ProfilesForInsert.Select(x => PickerItem.Item(Url.Action("New", new { profileId = x.Id }), x.Text)))
}


<form id="filterForm" class="alert alert-info" method="get" action="@Url.Action("Index")">

    @Html.HiddenConstant("search", true)

    <div class="row">

        <div class="form-group col-md-6 col-lg-4">
            @Html.LabelFor(x => x.Filter.Name)
            @Html.EditorFor(x => x.Filter.Name)
        </div>

        <div class="form-group col-md-6 col-lg-4">
            @Html.LabelFor(x => x.Filter.Contact)
            @Html.EditorFor(x => x.Filter.Contact)
        </div>

        <div class="form-group col-md-6 col-lg-4">
            @Html.LabelFor(x => x.Filter.ProfileId)
            @Html.EditorFor(x => x.Filter.ProfileId, new { Items = Model.ProfilesForFilter })
        </div>

    </div>

    @using (var bg = Html.ButtonGroup(ButtonGroupType.FilterGroup))
    {
        @bg.Submit(CommonResources.Search, ButtonStyle.FilterPrimary)
        @bg.Command(CommonResources.Clear, ButtonStyle.FilterNormal, false, new { id = "clear-button" });
    }

</form>


@*List of persons*@
@if (Model.Items.Count == 0)
{
    if (Model.WasSearched)
    {
        <p>
            <em>@CommonResources.NoRecords</em>
        </p>
    }
}
else
{
    <table class="table table-hover table-sm">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(x => x.Items[0].FullName)</th>
                <th>@Html.DisplayNameFor(x => x.Items[0].Email)</th>
                <th>@Html.DisplayNameFor(x => x.Items[0].Phone)</th>
                <th>@Html.DisplayNameFor(x => x.Items[0].Profile)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@Html.DisplayFor(x => item.FullName)</td>
                    <td>@Html.DisplayFor(x => item.Email)</td>
                    <td>@Html.DisplayFor(x => item.Phone)</td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.Profile))
                        {
                            @Html.DisplayFor(x => item.Profile)
                        }
                        else
                        {
                            <em>default</em>
                        }
                    </td>

                    <td>
                        @using (var bg = Html.ButtonGroup(ButtonGroupType.ItemRightGroup))
                        {
                            @bg.Link(CommonResources.Detail, ButtonStyle.Primary, Url.Action("Detail", new { id = item.PersonId }))
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@section scripts
{

    <script type="text/javascript">

        var runPageScript = function () {

            // CLEAR LOGIC

            var filterControls = [
                new CorabeuControl.TextBox("name", "name"),
                new CorabeuControl.TextBox("contact", "contact"),
                new CorabeuControl.DropDownList("profileId", "ProfileId")
            ];

            // connect delete-button
            $("#clear-button").click(function () {
                $.each(filterControls, function (index, control) {
                    control.setDefaultValue();
                });
            });

        }

    </script>

}